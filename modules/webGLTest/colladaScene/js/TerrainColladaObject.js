// Generated by CoffeeScript 1.6.3
(function() {
  var __bind = function(fn, me){ return function(){ return fn.apply(me, arguments); }; },
    __hasProp = {}.hasOwnProperty,
    __extends = function(child, parent) { for (var key in parent) { if (__hasProp.call(parent, key)) child[key] = parent[key]; } function ctor() { this.constructor = child; } ctor.prototype = parent.prototype; child.prototype = new ctor(); child.__super__ = parent.prototype; return child; };

  window.TerrainColladaObject = (function(_super) {
    __extends(TerrainColladaObject, _super);

    TerrainColladaObject.prototype.app = null;

    TerrainColladaObject.prototype.src = null;

    TerrainColladaObject.prototype.scale = 1;

    TerrainColladaObject.prototype.physics = false;

    TerrainColladaObject.prototype.mass = 0;

    TerrainColladaObject.prototype.mesh = null;

    TerrainColladaObject.prototype.obj = null;

    function TerrainColladaObject(app, src, scale, physics) {
      this.app = app;
      this.src = src;
      this.scale = scale;
      this.physics = physics;
      this.update = __bind(this.update, this);
    }

    TerrainColladaObject.prototype.load = function(cb) {
      var _this = this;
      return require(["" + this.app.urlRoot + "/lib/js/ColladaLoader.js"], function() {
        var loader;
        loader = new THREE.ColladaLoader();
        loader.options.convertUpAxis = true;
        return loader.load(_this.src, function(collada) {
          console.log(collada);
          _this.mesh = collada.meshes[0];
          if (!!cb) {
            return cb();
          }
        });
      });
    };

    TerrainColladaObject.prototype.init = function(scene) {
      this.mesh.scale.x = this.mesh.scale.y = this.mesh.scale.z = this.scale;
      this.mesh.position.y = -10;
      this.mesh.updateMatrix();
      if (this.physics) {
        this.obj = new Physijs.HeightfieldMesh(this.mesh.geometry, this.mesh.material, this.mass);
      } else {
        this.obj = this.mesh;
      }
      return scene.add(this.obj);
    };

    TerrainColladaObject.prototype.update = function(delta) {};

    return TerrainColladaObject;

  })(ColladaObject);

}).call(this);
